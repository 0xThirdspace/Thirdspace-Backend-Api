generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String     @id @default(uuid())
  name                 String     @db.VarChar(255)
  email                String     @unique
  password             String
  profileImage         String?    @default("user.png")
  workspace            Workspace?
  createdBounties      Bounty[]   @relation("CreatedByUser")
  participatedBounties Bounty[]   @relation("Participant")
  Team                 Team[]

  @@map(name: "users")
}

model Workspace {
  id             String   @id @default(uuid())
  workspace_name String   @unique
  imageUrl       String?  @default("workspace.png")
  userId         String   @unique
  user           User     @relation(fields: [userId], references: [id])
  bounties       Bounty[]
  team           Team[]

  @@map(name: "workspaces")
}

model Team {
  id          String     @id @default(uuid())
  email       String
  role        Role
  department  Department
  workspace   Workspace  @relation(fields: [workspaceId], references: [id])
  workspaceId String     
  user        User       @relation(fields: [userId], references: [id])
  userId      String

  @@unique([workspaceId, userId], name: "team_unique")
  @@map(name: "teams")
}

model Bounty {
  id                 String    @id @default(uuid())
  title              String    @unique @db.VarChar(255)
  repo_link          String
  amount             Float
  start_date         DateTime
  end_date           DateTime
  bounty_description String    @db.VarChar(255)
  workspaceId        String
  userId             String
  createdByUser      User      @relation("CreatedByUser", fields: [userId], references: [id])
  workspace          Workspace @relation(fields: [workspaceId], references: [id])
  participants       User[]    @relation("Participant")
  status             Status    @default(pending)

  @@index([title], name: "title_index")
  @@map(name: "bounties")
}

enum Status {
  pending
  active
  closed
}

enum Department {
  management
  marketing
  engineering
  product
  research
  finance
  sales
  operations
  human_resource
  other
}

enum Role {
  owner
  admin
  member
}
